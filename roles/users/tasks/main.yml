- name: output env
  command: "echo {{ PEGASUS_ENV }} > /root/ENV"

- name: create pegasus group
  group:
    name: "{{ sudogroup }}"
    state: present
    gid: "{{ sudogroupgid }}"

- name: get content of public sshkeys
  command: cat {{ item }}
  register: ssh_keys
  with_fileglob: files/*.pub
  changed_when: false

- name: create users
  user:
    name: "{{ item.item.split('/')[-1].split('.pub')[0] }}"
    shell: /bin/bash
    groups: "{{ sudogroup }}"
  with_items: "{{ssh_keys.results}}"
  no_log: true

- name: set authorized key
  authorized_key:
    user: "{{ item.item.split('/')[-1][:-4] }}"
    key: "{{item.stdout}}"
  with_items:
    - "{{ssh_keys.results}}"
  no_log: true

- name: create sudoers
  template:
    src: "{{ sudogroup }}.j2"
    dest: "/etc/sudoers.d/{{ sudogroup }}"
    owner: root
    group: root
    mode: 0440
    attr: ie

- name: comment out auth.log from rsyslog
  lineinfile:
    path: "/etc/logrotate.d/rsyslog"
    line: "/var/log/auth.log"
    state: absent

- name: set custom logrotate
  copy:
    src: "authlogrotate"
    dest: "/etc/logrotate.d/authlog"

- name: make auth.log append only
  file:
    path: "/var/log/auth.log"
    attr: ae
